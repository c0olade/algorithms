'''
leetcode problem 242. Valid Anagram

Given two strings s and t, return true if t is an anagram of s, and false otherwise.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

Example 1:
Input: s = "anagram", t = "nagaram"
Output: true

Example 2:
Input: s = "rat", t = "car"
Output: false

Constraints:
1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters.


In order to determine if two words are anagrams:
1. If you can rearrange the letters from one word to create the other.
2. If the two words are the same when you sort them in alphabetical order.
3. If the two words have the same frequency of each character.
'''


def isAnagram(s: str, t: str) -> bool:
    # If length of the words are not the same, you can termine the function early and return False.
    if len(s) != len(t):
        return False

    # Create two lists with 26 zeros (index 0 to index 25).
    # These lists will be used count the frequency of a letter. 
    s_freq = [0] * 26
    t_freq = [0] * 26

    # We iterate through the both lists.
    for i in range(len(s)):
        # Increment at the index of the character (0 index, so a is at index 0)
        s_freq[ord(s[i]) - ord('a')] += 1
        t_freq[ord(t[i]) - ord('a')] += 1

    # Compare the two lists. 
    # If equal, the frequency of each character in both words are the same and they are anagrams.
    return s_freq == t_freq
